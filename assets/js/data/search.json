[ { "title": "Mongodb Python Connection", "url": "/posts/mongodb-python-connection/", "categories": "Develop&Tech, DB", "tags": "mongodb, python, connection", "date": "2021-03-23 12:00:00 +0900", "snippet": "출처 : 하루에 하나파이썬으로 mongoDB를 제어하는 방법을 정리했습니다.DB 연결 방법, insert, delete, update, query(=find)문을 사용하는 방법을 정리했습니다. Pymongo 패키지 설치파이썬에서 mongoDB를 제어하기 위해 먼저 pymongo 패키지를 설치합니다.python -m pip install pymongo DB 연결from pymongo import MongoClientfrom pymongo.cursor import CursorTypehost = &quot;localhost&qu..." }, { "title": "matplotlib 한글 깨짐 &amp; mac, windows에 따른 환경설", "url": "/posts/plot-mac-win-kor/", "categories": "Develop&Tech, Python", "tags": "code_tip", "date": "2021-03-11 20:11:00 +0900", "snippet": "from matplotlib import font_manager, rcimport platform# 운용체제 환경에 따라 글꼴 선택.osSelect = platform.system()if osSelect == &#39;Windows&#39;: font_name = font_manager.FontProperties(fname=&quot;c:/Windows/Fonts/malgun.ttf&quot;).get_name() rc(&#39;font&#39;, family=font_name)elif osSelect == &#39..." }, { "title": "cafe24서버에서 젠트레이더 구동", "url": "/posts/cafe24-genport/", "categories": "Blog, etc", "tags": "cafa24, genport", "date": "2021-01-03 20:00:00 +0900", "snippet": "Cafe24 서버 생성 및 젠트레이더 구동방법목차 cafe24 호스팅 가입하기 윈도우용 가상서버 호스팅 신청하기2.1. 서버 방식 선택2.2. 윈도우 가성서버 일반형 신청하기2.3. 서버 관리용 개별 아이디 등록하기2.4. 세부정보 입력2.5. 서비스 기간 선택 및 청구가격 확인2.6. Cafe24 서버 결제하기 원격 데스트톱 설정 방법3.1. Cafe24 호스팅센터의 나의 서비스 관리 접속하기3.2. 서버 IP 알아내기3.3. 원격 데스크톱 설정하기 기본 설정 및 공인인증서, O..." }, { "title": "webstorm(jetbrain) 후행 공백 제거", "url": "/posts/jetbrain-trim-trailing-whitespace/", "categories": "Blog, etc", "tags": "gitblog, jekyll, security", "date": "2021-01-03 20:00:00 +0900", "snippet": "문제 발생md 파일 작성하고 줄바꿈을 위해 행마지막에 공백2개를 추가해야 합니다.현재 블로그를 webstorm에서 작성하는데 jetbrain류 IDE에서는 후행 공백을 제거하는 설정이 있습니다.IDE 설정에서 후행 공배 제거하지 않도록 해야 합니다.문제 해결1. 간단 설정Preferences - General - On Save에서 Remove trailing spaces on을 체크 해줘야 합니다.혹은 드롭다운에서 None으로 변경해 줄 수 있습니다.2. .editorconfig 설정 수정파일 목록에 .editorconfig ..." }, { "title": "Template", "url": "/posts/template/", "categories": "Blog, etc", "tags": "회고, 2020회고", "date": "2021-01-03 20:00:00 +0900", "snippet": "categories Blog Diary Review Thinking etc Computer-Science Data-Structure Algorithm Problem-Solve Develop&amp;amp;Tech Python AWS Git Javascript DB IDE Invest ..." }, { "title": "SK 바이오사이언스 리서치", "url": "/posts/skbioscience-research/", "categories": "Invest, Research", "tags": "종목분석, 비상장, 코로나백신", "date": "2021-01-03 12:00:00 +0900", "snippet": "SK 바이오 사이언스2018년 7월 SK케미칼에서 분사해 신설된 백신 전문 기업▣ 2019년 수익성 지표매출액 : 1,839억 원 영업이익 : 228억 원▣ 비상장 거래 호가 분석 (2020.12.16 기준)매수 호가 : 20 ~ 30만 원매도 호가 : 30 ~ 50만 원▣ 자체 개발 제품세계 최초 세포배양 4가 독감 백신 2015년 12월 스카이셀플루4가Ⓡ 허가세계 두 번째 대상포진 백신 2017년 9월 스카이조스터주Ⓡ 허가수두 백신 2018년 6월 스카이바리셀라주Ⓡ 허가▣ 보도자료■신종 감염병 대응 R＆D 돌..." }, { "title": "jekyll blog nokogiri 보안 이슈", "url": "/posts/jekyll-security-vulnerable-issues/", "categories": "Blog, etc", "tags": "gitblog, jekyll, security", "date": "2021-01-03 11:00:00 +0900", "snippet": "루비 위에서 동작하는 jekyll 블로그의 루비라이브러리 중 nokogiri 1.10.10의 보안 이슈가 발견되어 github의 jekyll blog build를 실패했습니다.위와 같이 종속성에 잠재적 보안 취약성을 발견했다고 github Actions에서 빌드를 실패 시켰습니다.see dependabot alert을 클릭하면 해결방법이 나옵니다.Gemfile의 nokogiri를 1.11.0.rc4버전으로 설치하도록 명시해주면 됩니다.gem &quot;nokogiri&quot;, &quot;&amp;gt;= 1.11.0.rc4..." }, { "title": "MSSQL Expess 에디션 제한과 RDS 엔진 옵션별 비용 정리", "url": "/posts/RDS-engine-option-cost/", "categories": "Develop&Tech, AWS", "tags": "Research", "date": "2021-01-01 12:00:00 +0900", "snippet": "사건 발단연구를 위해 회사 PC에 저장된 MSSQL 데이터를 AWS RDS에 마이그레이션하기 위해 RDS 엔진 옵션 중 Express Edition을 선택하여 작업하였습니다.(비용절감하기 위해 제일 싼 옵션을 고르고 별 생각없이 진행했습니다.)1개 DB에 약 25GB 정도되는 파일을 불러와 분석해야 했기 때문에 스토리지는 넉넉히 40GB로 설정하여 진행했습니다.MSSQL 데이터 정렬로 인한 한글 깨짐 현상을 해결하고, 데이터 내보내기를 통해 순조롭게 진행하길래 잠시 자리를 비우고 돌아오니 에러가 났습니다.처음엔 DB에 할당된 ..." }, { "title": "굿바이 2020", "url": "/posts/bye-2020/", "categories": "Blog, etc", "tags": "Summary, Markdown, HTML", "date": "2020-12-26 20:10:00 +0900", "snippet": "good bye 2020" }, { "title": "마크다운(markdown)작성하면서 필요한 HTML 조합", "url": "/posts/markdown-html-tip/", "categories": "Blog, etc", "tags": "Summary, Markdown, HTML", "date": "2020-12-26 20:10:00 +0900", "snippet": "markdown + html technique중앙정렬 + 강조중앙 정렬 + 강조&amp;lt;center&amp;gt;&amp;lt;strong&amp;gt;&amp;lt;/strong&amp;gt;&amp;lt;/center&amp;gt;펼치기python 코드 펼치기 python = &quot;py&quot;+&quot;thon&quot; &amp;lt;details&amp;gt;&amp;lt;summary&amp;gt;c++ 코드 펼치기&amp;lt;/summary&amp;gt;&amp;lt;!-- markd..." }, { "title": "지킬 블로그 시작", "url": "/posts/jekyll-blog-start/", "categories": "Blog, etc", "tags": "Summary", "date": "2020-12-21 14:25:00 +0900", "snippet": "지킬 블로그 시작jekyll 블로그를 시작하기 앞서 글쓰기에만 집중하기 위해 카테고리 기준을 정해 블로그 주제와 목적 명확하게 하고자 합니다.categories Blog Diary Review Thinking etc Computer-Science Data-Structure Algorithm Problem-Solve Develop&amp;amp;Tech Python AWS Git Ja..." }, { "title": "Dynamic Programming(동적 계획법)", "url": "/posts/Dynamic-Programming/", "categories": "Computer-Science, Algorithm", "tags": "Study", "date": "2019-03-13 12:00:00 +0900", "snippet": "Dynamic Programming(동적 계획법)1. 동적계획법이란동적 계획법이란, 복잡한 문제를 여러 개의 작은 부분 문제(sub-problem)로 나누어 해결하는 문제 해결 기법입니다.동적 계획법의 특징 중 하나는 이미 계산된 부분 문제가 다시 발생하면 새롭게 계산하지 않고 이전의 계산값을 참조하여 이용하는 것입니다.이 방법은 부분 문제를 다시 해결하는 데 필요한 시간을 절약할 수 있지만, 이전 계산값을 저장해둘 공간이 필요하므로 시간과 메모리의 trade-off라고 할 수 있습니다.fib(N) = fib(N - 1) + ..." }, { "title": "BFS(Breadth-First Search, 너비 우선 탐색)", "url": "/posts/Breadth-First-Search/", "categories": "Computer-Science, Algorithm", "tags": "Study", "date": "2019-03-13 12:00:00 +0900", "snippet": "Breadth-First Search, 너비 우선 탐색너비 우선 탐색은 그래프의 모든 정점들을 특정한 순서에 따라 방문하는 알고리즘 중 하나입니다.현재 정점과 인접한 간선들을 검사하다가 방문하지 않은 정점들을 발견하면 그 간선을 통해 방문하지 않은 정점들을 자료구조 큐에 넣습니다. 그리고 큐의 front 정점을 방문하고 pop합니다.또 해당 정점에서 인접한 간선을 검사해 방문하지 않은 정점들을 큐에 넣고 방문하기는 과정을 반복하다가 더 이상 방문할 수 있는 정점이 없으면 종료합니다.이러한 과정을 반복하여 큐에 더 이상 정점이 ..." }, { "title": "DFS(Depth-First Search, 깊이 우선 탐색)", "url": "/posts/Depth-First-Search/", "categories": "Computer-Science, Algorithm", "tags": "Study", "date": "2019-03-12 12:00:00 +0900", "snippet": "Depth-First Search 깊이 우선 탐색깊이 우선 탐색은 그래프의 모든 정점들을 특정한 순서에 따라 방문하는 알고리즘 중 하나입니다.현재 정점과 인접한 간선들을 검사하다가 방문하지 않은 정점을 발견하면 그 간선을 통해 방문하지 은 정점으로 이동하는 것입니다.이 과정을 반복하다가 더 이상 방문할 수 있는 정점이 없으면 마지막으로 통과한 간선을 통해 뒤로 돌아가서 해당 정점에서 방문할 수 있는 정점을 탐색합니다.이러한 과정을 반복하여 그래프의 모든 정점을 방문하는 알고리즘이 DFS 알고리즘입니다. 여러분의 이해를 돕기 위..." }, { "title": "Binary Search (이진 탐색)+Ternary Search", "url": "/posts/binary-search/", "categories": "Computer-Science, Algorithm", "tags": "Study", "date": "2019-03-11 12:00:00 +0900", "snippet": "Binary Serch이진 탐색(Binary Search)은 정렬된 배열에서 원하는 값을 시간복잡도 O(log N) 만에 찾아내는 탐색하는 방법입니다.오름차순으로 정렬된 사이즈가 N인 배열 D에서 원하는 값 k를 찾는 방법은 다음과 같습니다.먼저 탐색할 데이터의 범위를 두 개의 인덱스(왼쪽, 오른쪽)로 지정하고 이를 L, R이라고 하겠습니다. 정렬되어있기 때문에 D[L]은 최솟값, D[R]은 최대값이 됩니다.당연히 처음 탐색 시에는 전체영역이므로 L = 0, R = N - 1 입니다. 이중 중앙값(Median)을 찾아 찾으려는..." }, { "title": "Sieve of Eratosthenes(에라토스테네스의 체)", "url": "/posts/sieve-of-Eratosthenes/", "categories": "Computer-Science, Algorithm", "tags": "Study", "date": "2019-03-10 12:00:00 +0900", "snippet": "Sieve of Eratosthenes에라토스테네스의 체는 특정 범위의 수들이 소수(Prime)인지 아닌지를 판별하는 알고리즘입니다. 에라토스테네스의 체의 원리는 간단합니다.1~50까지 모든 소수를 구하고자 한다면, 먼저 아래와 같은 배열이 필요합니다. 이 배열은 해당 인덱스의 숫자가 소수인지 아닌지를 나타냅니다.먼저 가장 작은 소수 2부터 시작합니다. 그리고 2의 배수에 해당하는 수들은 모두 소수가 아닙니다. 따라서 범위 안의 2의 배수들을 소수가 아니라고 체크해줍니다.(일반적으로 boolean타입이나 int형 변수를 만들어..." }, { "title": "Hash(해쉬)", "url": "/posts/Hash/", "categories": "Computer-Science, Data-Structure", "tags": "Study", "date": "2019-02-17 12:00:00 +0900", "snippet": "HASHING(해싱)해싱은 임의의 길이의 데이터(키, Key)를 고정된 길이의 데이터(해시값, Hash value)로 변환해 작은 크기의 해시 테이블로 대응(Mapping)시켜 식별하는 하나의 기법입니다. 해시 테이블은 M개의 버킷으로 이루어져 있으며, 이 글에서 다루는 해시값은 해당 키가 저장될 버킷의 번호(해시 테이블의 인덱스)를 나타냅니다.키에서 해시값을 추출하는 일련의 과정을 해시 함수(Hash function)라고 합니다. 해시 함수는 같은 키에 대해서는 동일한 해시값을, 다른 키에 대해서는 다른 해시값을 추출해야 합..." }, { "title": "Heap(힙)", "url": "/posts/Heap/", "categories": "Computer-Science, Data-Structure", "tags": "Study", "date": "2019-02-16 12:00:00 +0900", "snippet": "HEAP(힙)힙(heap) 은 최댓값 또는 최솟값을 빠르게 찾아낼 수 있는 트리형 자료구조입니다.힙은 완전이진트리 형식을 따르며 모든 부모 노드의 값이 자식 노드들의 값과 일정한 대소 관계를 가지게 되는 규칙을 가지고 있습니다.또한 자식노드 사이의 상관관계는 없으므로 유의하여야 합니다.부모 노드의 값이 자식 노드의 값보다 크다면 최대 힙(Max Heap), 부모 노드의 값이 자식 노드의 값보다 작다면 최소 힙(Min Heap) 으로 부릅니다.힙의 규칙에 따라 트리의 가장 상단에는 최댓값 또는 최솟값이 있는 것이 자명하기 때문에..." }, { "title": "Tree(트리)", "url": "/posts/Tree/", "categories": "Computer-Science, Data-Structure", "tags": "Study", "date": "2019-02-15 12:00:00 +0900", "snippet": "TREE(트리)트리는 자식과 부모의 관계로 이루어진 계층적인 구조입니다. 필요에 따라 다양한 종류로 나뉘게 되는데 이번 문서에서는 제일 간단한 트리인 이진 트리에 대해서 설명하려고 합니다. 먼저 이진 트리에서 사용하는 용어들을 정리해보면 다음과 같습니다.Root : 트리에서 가장 최상위에 존재하는 노드Child : 어떠한 노드의 자식 노드Parent : 어떠한 노드의 부모 노드Siblings : 같은 부모를 갖는 형제 노드Leaf/Terminal : 자식 노드를 갖지 않는 노드Branch/Internal : 자식 노드를 적어도..." }, { "title": "Graph(그래프)", "url": "/posts/Graph/", "categories": "Computer-Science, Data-Structure", "tags": "Study", "date": "2019-02-14 12:00:00 +0900", "snippet": "GRAPH(그래프)그래프란 어떤 상태 혹은 객체 간의 관계를 나타내는 자료구조입니다. 그래프는 정점(Vertex)과 간선(Edge)으로 구성됩니다.정점이란 어떠한 상태 혹은 객체를 나타냅니다. 간선은 그러한 정점 간의 관계, 그중에서도 연결성을 표현하는 요소입니다.아래 그림은 그래프의 개념이 퍼지기 시작한 ‘쾨니히스베르크의 다리 건너기 문제’의 쾨니히스베르크의 다리를 도식화한 두 그림입니다.A, B, C, D로 나눠진 4개의 구역과 각 구역을 잇는 a, b, c, d, e, f, g 7개의 다리가 있습니다. 왼쪽이 일반적으로 ..." }, { "title": "Stack(스택)", "url": "/posts/Stack/", "categories": "Computer-Science, Data-Structure", "tags": "Study", "date": "2019-02-13 12:00:00 +0900", "snippet": "STACK(스택)스택은 선형 구조이며, 마지막으로 삽입된 값이 가장 먼저 나오는 LIFO(Last in First Out)으로 되어 있습니다. 이 때 삽입하는 과정을 push라고 하며 값을 빼내는 과정을 pop이라고 합니다. 예를 들면 a, b, c 순서로 push하고 스택에 있는 값들을 모두 pop하면 c, b, a 순서로 나오게 되는 것입니다. 또한 스택에는 size, top, empty라는 함수가 있으며 size는 스택에 들어있는 값들의 수를 반환하는 함수이고, top은 마지막으로 삽입된 값을 반환하는 함수, empty는..." }, { "title": "Queue(큐)", "url": "/posts/Queue/", "categories": "Computer-Science, Data-Structure", "tags": "Study", "date": "2019-02-12 12:00:00 +0900", "snippet": "QUEUE(큐)큐는 선형 구조이며, 삽입된 순서대로 값이 나오는 FIFO(First in First Out)로 되어 있습니다. 이때 삽입하는 과정을 enqueue라고 하며 값을 빼내는 과정을 dequeue라고 합니다.예를 들면 a, b, c 순서로 enqueue하고 큐에 있는 값들을 모두 dequeue하면 a, b, c 순서로 나오게 됩니다.또한 큐에는 size, front, empty라는 함수가 있으며 size는 큐에 들어있는 값들의 수를 반환하는 함수이고, front은 큐에서 가장 먼저 삽입된 값을 반환하는 함수, empt..." }, { "title": "List(연결리스트)", "url": "/posts/Linked-List/", "categories": "Computer-Science, Data-Structure", "tags": "Study", "date": "2019-02-11 12:00:00 +0900", "snippet": "LIST(연결리스트)연결리스트는 랜덤 접근이 가능한 배열과는 다른 순차적인(sequential) 자료구조입니다.연결리스트는 노드들로 구성되어 있습니다. 노드는 저장할 값과 다음 노드를 가리키는 포인터로 이루어져 있습니다. 연결리스트의 첫 노드인 헤드(Head)로 부터 노드에 다음 노드를 가리키는 포인터를 사용해 리스트를 순회할 수 있게 됩니다.위와 같은 연결리스트를 Singly Linked List라고 합니다.Singly Linked List의 각 노드에 이전 노드를 가리키는 포인터를 추가하게 되면 양방향으로 순회가 가능한 D..." } ]
