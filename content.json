{"meta":{"title":"Hanson|개발자","subtitle":"승한 개발 블로그","description":"알고리즘 문제, 수학, 최적화 문제에 흥미를 가지며 금융, 분석 개발자로 나아가는 블로그입니다.","author":"son seung Han","url":"http://yoursite.com"},"pages":[{"title":"","date":"2019-02-10T11:29:50.000Z","updated":"2019-02-10T15:33:25.664Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"Introduce 알고리즘 문제, 수학, 최적화 문제에 흥미를 가지며 금융개발, 데이터 분석 영역에 개발자로 나아가고 있습니다. 다양한 직군의 사람들과 어울리는 것을 좋아하고, 새로운것과 도전하는 것에 열려있습니다. Skills C / C++ / Javascript / Python MySQL / Oracle / Maria DB AWS (EC2, RDS, S3) Git / Github VS Code / PyCharm"}],"posts":[{"title":"자료구조_List(연결리스트)","slug":"Computer-Science-Data-Structure-20190211-List","date":"2019-02-11T00:36:51.000Z","updated":"2019-02-11T01:33:09.419Z","comments":true,"path":"2019/02/11/Computer-Science-Data-Structure-20190211-List/","link":"","permalink":"http://yoursite.com/2019/02/11/Computer-Science-Data-Structure-20190211-List/","excerpt":"","text":"LIST(연결리스트)연결리스트는 랜덤 접근이 가능한 배열과는 다른 순차적인(sequential) 자료구조입니다.연결리스트는 노드들로 구성되어 있습니다. 노드는 저장할 값과 다음 노드를 가리키는 포인터로 이루어져 있습니다. 연결리스트의 첫 노드인 헤드(Head)로 부터 노드에 다음 노드를 가리키는 포인터를 사용해 리스트를 순회할 수 있게 됩니다. 위와 같은 연결리스트를 Singly Linked List라고 합니다. Singly Linked List의 각 노드에 이전 노드를 가리키는 포인터를 추가하게 되면 양방향으로 순회가 가능한 Doubly Linked List가 되고, 환형 큐(Circular Queue)와 같이 연결리스트의 마지막 노드인 테일(Tail)과 헤드를 이으면 Circular Linked List가 됩니다.이는 문제의 상황에 따라 구현하여 사용하시면 됩니다. 각 노드는 저장할 값과 자신의 앞, 뒤 노드를 가르키는 포인터를 가짐테일의 포인터는 헤드를 가르킴 두 자료구조의 장단점을 나열해보자면, 배열은 인덱스로 인한 무작위 접근이 가능하고, 리스트에 비해 저장공간을 적게 필요로 하지만, 리스트에 비해 자료의 삽입, 삭제가 비효율 적인 부분이 있습니다. 순서를 유지하면서 자료를 삽입 / 삭제하기 위해서는 최악의 경우 모든 데이터를 옮겨주어야 하기 때문입니다. 리스트는 무작위 접근이 불가능하므로 무조건 순차적으로 탐색해야 하며, 노드에 저장할 값과 포인터를 포함하고 있기 때문에 똑같은 크기의 배열에 비해 저장공간을 많이 차지하게 되지만, 자료의 삽입과 삭제가 새로운 노드를 만들어 포인터로 이어주기만 하면 되기 때문에 간편하고 유연하게 동작합니다. – List(연결리스트) 동적배열 Indexing O(N) O(1) Insert / Delete at beginning O(1) O(N) Insert / Delete at end O(1) when last element is known;O(N) when last element is unknown O(1) Insert / Delete in middle search time + O(1) O(N) 리스트와 배열의 시간복잡도 비교,https://en.wikipedia.org/wiki/Linked_list","categories":[{"name":"Computer Science","slug":"Computer-Science","permalink":"http://yoursite.com/categories/Computer-Science/"},{"name":"Data Structure","slug":"Computer-Science/Data-Structure","permalink":"http://yoursite.com/categories/Computer-Science/Data-Structure/"}],"tags":[]},{"title":"pyhtonPost","slug":"Python-20190211-pyhtonPost","date":"2019-02-10T15:15:05.000Z","updated":"2019-02-10T15:15:19.246Z","comments":true,"path":"2019/02/11/Python-20190211-pyhtonPost/","link":"","permalink":"http://yoursite.com/2019/02/11/Python-20190211-pyhtonPost/","excerpt":"","text":"","categories":[{"name":"Python","slug":"Python","permalink":"http://yoursite.com/categories/Python/"}],"tags":[]},{"title":"algorithmPost","slug":"Algorithm-20190210-algorithmPost","date":"2019-02-10T14:53:11.000Z","updated":"2019-02-10T14:53:26.902Z","comments":true,"path":"2019/02/10/Algorithm-20190210-algorithmPost/","link":"","permalink":"http://yoursite.com/2019/02/10/Algorithm-20190210-algorithmPost/","excerpt":"","text":"","categories":[{"name":"Algorithm","slug":"Algorithm","permalink":"http://yoursite.com/categories/Algorithm/"}],"tags":[]},{"title":"stockPost","slug":"Stock-20190210-stockPost","date":"2019-02-10T13:31:53.000Z","updated":"2019-02-10T14:52:56.947Z","comments":true,"path":"2019/02/10/Stock-20190210-stockPost/","link":"","permalink":"http://yoursite.com/2019/02/10/Stock-20190210-stockPost/","excerpt":"","text":"","categories":[{"name":"Stock","slug":"Stock","permalink":"http://yoursite.com/categories/Stock/"}],"tags":[]},{"title":"dataSciencePost","slug":"Data-Science-20190210-dataSciencePost","date":"2019-02-10T13:30:33.000Z","updated":"2019-02-10T14:52:42.258Z","comments":true,"path":"2019/02/10/Data-Science-20190210-dataSciencePost/","link":"","permalink":"http://yoursite.com/2019/02/10/Data-Science-20190210-dataSciencePost/","excerpt":"","text":"","categories":[{"name":"Data Science","slug":"Data-Science","permalink":"http://yoursite.com/categories/Data-Science/"}],"tags":[]},{"title":"Hell..","slug":"Blog-20190210-Hell","date":"2019-02-10T12:42:25.000Z","updated":"2019-02-10T14:52:02.691Z","comments":true,"path":"2019/02/10/Blog-20190210-Hell/","link":"","permalink":"http://yoursite.com/2019/02/10/Blog-20190210-Hell/","excerpt":"","text":"ㅎㅇ","categories":[{"name":"Blog","slug":"Blog","permalink":"http://yoursite.com/categories/Blog/"}],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2019-02-09T19:05:45.592Z","updated":"2019-02-09T19:05:45.592Z","comments":true,"path":"2019/02/10/hello-world/","link":"","permalink":"http://yoursite.com/2019/02/10/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}